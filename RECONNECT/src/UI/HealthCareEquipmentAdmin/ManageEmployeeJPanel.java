/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.HealthCareEquipmentAdmin;

import Code.Employee;
import Code.Organization.Directory_Organization;
import Code.Organization.Organization;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 * Panel for managing employees in the context of a health care equipment
 * administrator's user interface. Allows the administrator to view, create, and
 * manage employees within different organizations. Also provides the option to
 * navigate back to the previous panel.
 *
 * @author Milindh R Kashyap
 */
public class ManageEmployeeJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageEmployeeJPanel
     */
    private Directory_Organization organizationdir;
    private JPanel uppercontainer;

    /**
     * Creates new form ManageEmployeeJPanel.
     *
     * @param uppercontainer The JPanel where this panel is placed.
     * @param organizationDir The organization directory containing the list of
     * organizations.
     */
    public ManageEmployeeJPanel(JPanel uppercontainer, Directory_Organization organizationDir) {
        initComponents();
        this.uppercontainer = uppercontainer;
        this.organizationdir = organizationDir;
        populateOrgComboBox();
        populateOrgEmpBox();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        org1Lbl = new javax.swing.JLabel();
        cmbbox = new javax.swing.JComboBox();
        name = new javax.swing.JLabel();
        nametextfield = new javax.swing.JTextField();
        BtnBack = new javax.swing.JButton();
        BtnCreateEmployee = new javax.swing.JButton();
        MainLabel = new javax.swing.JLabel();
        orgLbl = new javax.swing.JLabel();
        orgCmbBox = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(0, 102, 102));

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table1);

        org1Lbl.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        org1Lbl.setText("Organization :");

        cmbbox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        name.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        name.setText(" Name:");

        nametextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nametextfieldActionPerformed(evt);
            }
        });

        BtnBack.setText("<< Back");
        BtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackActionPerformed(evt);
            }
        });

        BtnCreateEmployee.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add.png"))); // NOI18N
        BtnCreateEmployee.setText("Create Employee");
        BtnCreateEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCreateEmployeeActionPerformed(evt);
            }
        });

        MainLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        MainLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MainLabel.setText("Manage Employee");

        orgLbl.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        orgLbl.setText("Organization :");

        orgCmbBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        orgCmbBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orgCmbBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnCreateEmployee)
                .addGap(339, 339, 339))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BtnBack)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 138, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(orgLbl)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(orgCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(448, 448, 448))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(org1Lbl)
                                    .addGap(18, 18, 18)
                                    .addComponent(cmbbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(95, 95, 95)
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(nametextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(202, 202, 202)))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnBack)
                .addGap(2, 2, 2)
                .addComponent(MainLabel)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orgLbl)
                    .addComponent(orgCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(org1Lbl)
                    .addComponent(nametextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name))
                .addGap(18, 18, 18)
                .addComponent(BtnCreateEmployee)
                .addContainerGap(167, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nametextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nametextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nametextfieldActionPerformed

    private void BtnCreateEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCreateEmployeeActionPerformed
        Organization organization = (Organization) cmbbox.getSelectedItem();
        String name = nametextfield.getText();
        organization.getEmpDir().AddEmployee(name);
        populateTable(organization);// TODO add your handling code here:
    }//GEN-LAST:event_BtnCreateEmployeeActionPerformed

    private void BtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBackActionPerformed
        // TODO add your handling code here:
        uppercontainer.remove(this);
        CardLayout layout = (CardLayout) uppercontainer.getLayout();
        layout.previous(uppercontainer);

    }//GEN-LAST:event_BtnBackActionPerformed

    private void orgCmbBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orgCmbBoxActionPerformed
        // TODO add your handling code here:
        Organization organization = (Organization) orgCmbBox.getSelectedItem();
        if (organization != null) {
            populateTable(organization);

        }
    }//GEN-LAST:event_orgCmbBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBack;
    private javax.swing.JButton BtnCreateEmployee;
    private javax.swing.JLabel MainLabel;
    private javax.swing.JComboBox cmbbox;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel name;
    private javax.swing.JTextField nametextfield;
    private javax.swing.JLabel org1Lbl;
    private javax.swing.JComboBox orgCmbBox;
    private javax.swing.JLabel orgLbl;
    private javax.swing.JTable table1;
    // End of variables declaration//GEN-END:variables

    /**
     * Populates the table with employee information for a specific
     * organization. Retrieves employee data from the given organization's
     * employee directory and adds rows to the table for each employee,
     * displaying employee ID and name.
     *
     * @param organization The organization for which the employee information
     * is displayed.
     */
    private void populateTable(Organization organization) {

        // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        DefaultTableModel model = (DefaultTableModel) table1.getModel();

        model.setRowCount(0);

        for (Employee employee : organization.getEmpDir().getE_List()) {
            Object[] row = new Object[2];
            row[0] = employee.getEId();
            row[1] = employee.getEName();
            model.addRow(row);
        }

    }

    /**
     * Populates the organization combo box with available organizations.
     * Removes existing items from the orgCmbBox combo box and adds each
     * organization from the organization directory, allowing users to select an
     * organization.
     */
    private void populateOrgComboBox() {
        // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        orgCmbBox.removeAllItems();

        for (Organization organization : organizationdir.getOrganizations()) {
            orgCmbBox.addItem(organization);
        }

    }

    /**
     * Populates the organization employee combo box with available
     * organizations. Removes existing items from the cmbbox combo box and adds
     * each organization from the organization directory, allowing users to
     * select an organization.
     */
    private void populateOrgEmpBox() {
        // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        cmbbox.removeAllItems();

        for (Organization organization : organizationdir.getOrganizations()) {
            cmbbox.addItem(organization);
        }
    }
}
