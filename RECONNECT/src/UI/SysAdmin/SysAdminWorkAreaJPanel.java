/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.SysAdmin;

import Code.Directory_Address;
import Code.EcoSystem;
import Code.EnterPrise;
import Code.Network;
import Code.Organization.Organization;
import java.awt.CardLayout;
import static java.time.Clock.system;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 * JPanel class for the system administrator work area. Displays a tree
 * structure representing networks, enterprises, and organizations. Provides
 * buttons to manage networks, enterprises, and enterprise admins.
 *
 * @author Milindh R Kashyap
 */
public class SysAdminWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SysAdminWorkAreaJPanel
     */
    JPanel userContainer;
EcoSystem eco;
private Directory_Address addresslist;

    /**
     * Creates new form SysAdminWorkAreaJPanel.
     *
     * @param userContainer The panel where the user interface is managed.
     * @param eco The ecosystem containing networks, enterprises, and address
     * information.
     */
    public SysAdminWorkAreaJPanel(JPanel userContainer, EcoSystem eco) {
        initComponents();
        this.userContainer = userContainer;
        this.eco = eco;
        populateTreewithData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        BtnManageNET = new javax.swing.JButton();
        BTNEnterPrise = new javax.swing.JButton();
        BTNEnterPriseAdmin = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 102, 102));

        jPanel2.add(jScrollPane1);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("System");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Network");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Enterprise");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Enterprise Admin");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Reports");
        treeNode1.add(treeNode2);
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane2.setViewportView(jTree1);

        jPanel2.add(jScrollPane2);

        BtnManageNET.setText("Manage Network");
        BtnManageNET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnManageNETActionPerformed(evt);
            }
        });

        BTNEnterPrise.setText("Manage Enterprise");
        BTNEnterPrise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNEnterPriseActionPerformed(evt);
            }
        });

        BTNEnterPriseAdmin.setText("Manage Enterprise Admin");
        BTNEnterPriseAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNEnterPriseAdminActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/AdminBigImage.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(BTNEnterPriseAdmin)
                            .addComponent(BtnManageNET, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BTNEnterPrise, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 750, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 876, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(BtnManageNET)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BTNEnterPrise)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BTNEnterPriseAdmin)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(102, 102, 102)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BtnManageNETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnManageNETActionPerformed
        ManageNetworkJPanel manageNtwrkJPnl = new ManageNetworkJPanel(userContainer, eco);
        userContainer.add("manageNtwrkJPnl", manageNtwrkJPnl);
        CardLayout crdlyt = (CardLayout) userContainer.getLayout();
        crdlyt.next(userContainer);
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnManageNETActionPerformed

    private void BTNEnterPriseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNEnterPriseActionPerformed
        ManageEnterpriseJPanel mngEntJPanel = new ManageEnterpriseJPanel(userContainer, eco);
        userContainer.add("mngEntJPanel", mngEntJPanel);
        CardLayout crdlyt = (CardLayout) userContainer.getLayout();
        crdlyt.next(userContainer);
        // TODO add your handling code here:
    }//GEN-LAST:event_BTNEnterPriseActionPerformed

    private void BTNEnterPriseAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNEnterPriseAdminActionPerformed
        ManageEnterpriseAdminJPanel manageAdminJPnl = new ManageEnterpriseAdminJPanel(userContainer, eco);
        userContainer.add("manageNtwrkJPnl", manageAdminJPnl);
        CardLayout crdlyt = (CardLayout) userContainer.getLayout();
        crdlyt.next(userContainer);        // TODO add your handling code here:
    }//GEN-LAST:event_BTNEnterPriseAdminActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTNEnterPrise;
    private javax.swing.JButton BTNEnterPriseAdmin;
    private javax.swing.JButton BtnManageNET;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables

    /**
     * Populates the tree with network, enterprise, and organization data.
     */
    public void populateTreewithData() {
        // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        DefaultTreeModel model = (DefaultTreeModel) jTree1.getModel();

        ArrayList<Network> networkList = eco.getNetworks();
        ArrayList<EnterPrise> enterpriseList;
        ArrayList<Organization> organizationList;
        Network network;
        EnterPrise enterprise;
        Organization organization;

        DefaultMutableTreeNode networks = new DefaultMutableTreeNode("Networks");
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        root.removeAllChildren();
        root.insert(networks, 0);

        DefaultMutableTreeNode networkNode;
        DefaultMutableTreeNode enterpriseNode;
        DefaultMutableTreeNode organizationNode;
        for (int i = 0; i < networkList.size(); i++) {
            network = networkList.get(i);
        networkNode = new DefaultMutableTreeNode(network.getNetwork_Name());
            networks.insert(networkNode, i);

        enterpriseList = network.getDirectoEnterpri().getEnterpList();

            for (int j = 0; j < enterpriseList.size(); j++) {
                enterprise = enterpriseList.get(j);
                enterpriseNode = new DefaultMutableTreeNode(enterprise.getOrgName());
                networkNode.insert(enterpriseNode, j);

        organizationList = enterprise.getOrgaDirectory().getOrganizations();
                for (int k = 0; k < organizationList.size(); k++) {
                    organization = organizationList.get(k);
                    organizationNode = new DefaultMutableTreeNode(organization.getOrgName());
                    enterpriseNode.insert(organizationNode, k);
                }
            }
        }
        model.reload();
    }
}
