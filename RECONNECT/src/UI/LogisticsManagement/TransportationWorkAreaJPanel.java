/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.LogisticsManagement;

import Code.Account;
import Code.EcoSystem;
import Code.Organization.Organization;
import Code.WorkQueue.TransportationWorkRequest;
import Code.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 * JPanel class for managing transportation work area in the logistics
 * management module. Displays a table of transportation work requests and
 * provides options to process and assign requests.
 *
 * @author Milindh R Kashyap
 */
public class TransportationWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form TransportationWorkAreaJPanel
     */
    JPanel upperConatiner;
    private Account acc;
    private Organization org;
    private EcoSystem eco;

    /**
     * Creates new form TransportationWorkAreaJPanel.
     *
     * @param upperContainer The panel where this panel is added.
     * @param acc The account associated with this panel.
     * @param org The organization associated with this panel.
     * @param eco The ecosystem associated with this panel.
     */
    public TransportationWorkAreaJPanel(JPanel upperConatiner, Account acc, Organization org, EcoSystem eco) {
        initComponents();
        this.upperConatiner = upperConatiner;
        this.acc = acc;
        this.org = org;
        this.eco = eco;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnProcessReq = new javax.swing.JButton();
        mainlbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workreqTble = new javax.swing.JTable();
        BtnRef = new javax.swing.JButton();
        btnAssign = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 102, 102));

        btnProcessReq.setText("Process request");
        btnProcessReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessReqActionPerformed(evt);
            }
        });

        mainlbl.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        mainlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainlbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/TransportImage.jpg"))); // NOI18N
        mainlbl.setText("Logistics ");

        workreqTble.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Hospital Name", "Sender", "Status", "Message"
            }
        ));
        jScrollPane1.setViewportView(workreqTble);

        BtnRef.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RefreshImage.jpg"))); // NOI18N
        BtnRef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRefActionPerformed(evt);
            }
        });

        btnAssign.setText("Assign");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(BtnRef)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 687, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(mainlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 1030, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(339, 339, 339)
                        .addComponent(btnAssign)
                        .addGap(124, 124, 124)
                        .addComponent(btnProcessReq)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(mainlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnRef))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAssign)
                    .addComponent(btnProcessReq))
                .addContainerGap(46, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnProcessReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessReqActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        int selectedRow = workreqTble.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!");
            return;
        }
        TransportationWorkRequest request = (TransportationWorkRequest) workreqTble.getValueAt(selectedRow, 0);
        request.setStatus("Processing");
        CardLayout layout = (CardLayout) upperConatiner.getLayout();
        upperConatiner.add("ProcessRequest", new ProcessRequestJPanel(upperConatiner, request));
        layout.next(upperConatiner);
    }//GEN-LAST:event_btnProcessReqActionPerformed

    private void BtnRefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRefActionPerformed
        populateTable();
    }//GEN-LAST:event_BtnRefActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        int selectedRow = workreqTble.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!");
            return;
        }
        TransportationWorkRequest request = (TransportationWorkRequest) workreqTble.getValueAt(selectedRow, 0);
        request.setReceiver(acc);
        request.setStatus("Assigned");
    }//GEN-LAST:event_btnAssignActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnRef;
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnProcessReq;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel mainlbl;
    private javax.swing.JTable workreqTble;
    // End of variables declaration//GEN-END:variables

    /**
     * Populates the transportation work request table with data from the
     * organization's work request list.
     */
    public void populateTable() {
        // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        DefaultTableModel model = (DefaultTableModel) workreqTble.getModel();
        model.setRowCount(0);
        for (WorkRequest request : org.getWQ().getWorkRequestList()) {
            Object[] row = new Object[7];
            row[0] = ((TransportationWorkRequest) request);
            row[1] = request.getSender().getEmp().getEName();
            row[2] = ((TransportationWorkRequest) request).getEquipmentinfo();
            row[3] = ((TransportationWorkRequest) request).getHospitalName();
            row[4] = ((TransportationWorkRequest) request).getUrgency();
            row[5] = request.getStatus();
            row[6] = request.getRequestDate();
            model.addRow(row);
        }

        // Hardcoded data with random values
        Object[] row1 = {"Fast", "Ravikiran", "Pending", "One the way"};
        Object[] row2 = {"Fast", "Ravikiran", "Completed", "On time"};
        Object[] row3 = {"Fast", "Ravikiran", "Pending", "Handle with care"};
        // Add more rows as needed

        // Add hardcoded data to the table model
        model.addRow(row1);
        model.addRow(row2);
        model.addRow(row3);
        // Add more rows as needed
    }
}
