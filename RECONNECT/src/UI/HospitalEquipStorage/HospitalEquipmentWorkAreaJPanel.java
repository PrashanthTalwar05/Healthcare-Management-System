/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.HospitalEquipStorage;

import Code.Account;
import Code.EcoSystem;
import Code.EnterPrise;
import Code.Network;
import Code.Organization.Organization;
import Code.WorkQueue.HealthcareEquipmentWorkRequest;
import Code.WorkQueue.WorkRequest;
import Code.WorkQueue.TransportationWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 * JPanel class representing the work area for handling hospital equipment
 * requests. Allows users to assign requests, process them, and view request
 * status.
 *
 * @author Milindh R Kashyap
 */
public class HospitalEquipmentWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form HospitalEquipmentWorkAreaJPanel
     */
    private JPanel upperContainer;
    private EcoSystem eco;
    private Account acc;
    private Organization org;
    private Network ntk;
    private Organization transportOrg;
    private EnterPrise enter;

    public HospitalEquipmentWorkAreaJPanel(JPanel uppercontainer, EcoSystem eco, Account acc, Organization org, Network ntk) {
        initComponents();

        this.upperContainer = uppercontainer;
        this.eco = eco;
        this.acc = acc;
        this.org = org;
        this.ntk = ntk;
        populateHealthCareReqTbl();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BTNAssignment = new javax.swing.JButton();
        ProcessRequestBTN = new javax.swing.JButton();
        ViewReqStatusBTn = new javax.swing.JButton();
        BtnRefresh = new javax.swing.JButton();
        MainLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 102, 102));
        setMinimumSize(new java.awt.Dimension(900, 665));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BTNAssignment.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BTNAssignment.setText("ASSIGN TO ME");
        BTNAssignment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNAssignmentActionPerformed(evt);
            }
        });
        add(BTNAssignment, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 450, 130, 20));

        ProcessRequestBTN.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ProcessRequestBTN.setText("PROCESS REQUEST>>>");
        ProcessRequestBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcessRequestBTNActionPerformed(evt);
            }
        });
        add(ProcessRequestBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 450, 190, 20));

        ViewReqStatusBTn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ViewReqStatusBTn.setText("VIEW REQUEST STATUS>>");
        ViewReqStatusBTn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewReqStatusBTnActionPerformed(evt);
            }
        });
        add(ViewReqStatusBTn, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 500, 210, 20));

        BtnRefresh.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BtnRefresh.setText("Refresh");
        add(BtnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 130, 36));

        MainLbl.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        MainLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MainLbl.setText("REQUESTS FROM HOSPITALS");
        add(MainLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 1310, 50));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EQUIPMENT NAME", "URGENCY LEVEL", "QUANTITY", "SENDER", "RECIEVER", "REQUEST SENT Y/N"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 909, 279));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/SthethoscopeImage.jpg"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 30, 70, 100));
    }// </editor-fold>//GEN-END:initComponents

    private void BTNAssignmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNAssignmentActionPerformed
        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!");
        }

        HealthcareEquipmentWorkRequest request = (HealthcareEquipmentWorkRequest) jTable1.getValueAt(selectedRow, 0);
        request.setReceiver(acc);
        request.setStatus("Pending");
        request.setTransportrequestStatus("N");

        populateHealthCareReqTbl();        // TODO add your handling code here:
    }//GEN-LAST:event_BTNAssignmentActionPerformed

    private void ProcessRequestBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcessRequestBTNActionPerformed
        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }

        HealthcareEquipmentWorkRequest request = (HealthcareEquipmentWorkRequest) jTable1.getValueAt(selectedRow, 0);
        System.out.println("hello");
        request.setStatus("Request sent to transport department for delivery");
        TransportationWorkRequest transportrequest = new TransportationWorkRequest();
        transportrequest = new TransportationWorkRequest();
        transportrequest.setSender(acc);

        transportrequest.setHospitalName(request.getHospitalName());

        transportrequest.setUrgency(request.getUrgencyLevel());
        transportrequest.setStatus("Sent");
        transportrequest.setEquipmentinfo(("Name: " + request.getEquipmentName()) + "," + "Qauntity: " + (request.getQuantity()));
        request.setExpectedArrivalTime(request.getMessage());
        request.setTransportrequestStatus("Y");
        if (ntk.getNetwork_Name().equals(this.ntk.getNetwork_Name())) {
            for (EnterPrise enterprise : ntk.getDirectoEnterpri().getEnterpList()) {
                System.out.println("****" + enterprise.getOrgName());
                System.out.println("******" + enterprise.getEnterprise_type());
                for (Organization organization : enterprise.getOrgaDirectory().getOrganizations()) {
                    System.out.println("***** Organization Name:" + organization.getOrgName());
                    if (organization.getOrgName().equals("Transportation Organization")) {
                        System.out.println("True");
                        System.out.println("***** organization Name" + organization.getOrgName());
                        JOptionPane.showMessageDialog(null, "A Notification has been sent to concerned Transport Department "
                                + "The request id is : " + transportrequest.getUniqueId());
                        int requestId = transportrequest.getUniqueId();
                        System.out.println("***" + requestId);
                        transportrequest.setRequestId(requestId);
                        acc.getWorkQueue().getWorkRequestList().add(transportrequest);
                        organization.getWQ().getWorkRequestList().add(transportrequest);

                    }

                }
            }

            CardLayout layout = (CardLayout) upperContainer.getLayout();
            upperContainer.add("ProcessRequest", new HospitalEquipmentLogisticsRequestJPanel(upperContainer, acc));
            layout.next(upperContainer);

        } else {
            CardLayout layout = (CardLayout) upperContainer.getLayout();
            upperContainer.add("ProcessRequest", new HospitalEquipmentLogisticsRequestJPanel(upperContainer, acc));
            layout.next(upperContainer);

        }
        // populateTransportWorkRequest();
        // TODO add your handling code here:
    }//GEN-LAST:event_ProcessRequestBTNActionPerformed

    private void ViewReqStatusBTnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewReqStatusBTnActionPerformed
        CardLayout layout = (CardLayout) upperContainer.getLayout();
        upperContainer.add("ProcessRequest", new HospitalEquipmentLogisticsRequestJPanel(upperContainer, acc));
        layout.next(upperContainer);        // TODO add your handling code here:
    }//GEN-LAST:event_ViewReqStatusBTnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTNAssignment;
    private javax.swing.JButton BtnRefresh;
    private javax.swing.JLabel MainLbl;
    private javax.swing.JButton ProcessRequestBTN;
    private javax.swing.JButton ViewReqStatusBTn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    /**
     * Populates the healthcare equipment requests table with relevant data.
     * Retrieves the list of work requests from the organization's work queue,
     * and adds the information to the table, including equipment name, urgency
     * level, quantity, sender's username, and receiver's username.
     */
    private void populateHealthCareReqTbl() {
        // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        model.setRowCount(0);
        System.out.println(org.getWQ().getWorkRequestList().size());
        for (WorkRequest request : org.getWQ().getWorkRequestList()) {
            Object[] row = new Object[6];
            row[0] = ((HealthcareEquipmentWorkRequest) request);
            String urgencyLevel = ((HealthcareEquipmentWorkRequest) request).getUrgencyLevel();
            int quantity = ((HealthcareEquipmentWorkRequest) request).getQuantity();
            row[1] = urgencyLevel;
            row[2] = quantity;
            row[3] = request.getSender().getUsrnm();

//            row[4]=request.getReceiver().getUsrnm();
            model.addRow(row);
        }
    }
}

/*public void populateTransportWorkRequest(){
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        
        model.setRowCount(0);
        Object row[]=new Object[4];
        for(WorkRequest request : acc.getWorkQueue().getWorkRequestList()){
            row[0]=((WorkReqTransportation) request);
            row[1]=request.getReceiver();
            row[2]=request.getStatus();
            row[3]=((WorkReqTransportation)request).getTime();
        }
        
    }
    }*/
