/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Pharmacy;

import Code.Account;
import Code.EcoSystem;
import Code.EnterPrise;
import Code.Organization.Organization;
import Code.WorkQueue.SupplierWorkRequest;
import Code.WorkQueue.WorkRequest;
import Code.WorkQueue.OperationsWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 * JPanel class for viewing medicine requests in the pharmacy. Displays a table
 * with details such as medicine name, urgency level, receiver, status, and
 * expected delivery date.
 *
 * @author Milindh R Kashyap
 */
public class ViewMedicinesRequestJPanel extends javax.swing.JPanel {

    private EnterPrise enterprise;
    private JPanel panel;
    private EcoSystem eco;
    private Account acc;
    private Organization organization;
    private OperationsWorkRequest operationWorkRequest;

    /**
     * Creates new form ViewMedicinesRequestJPanel.
     *
     * @param panel The panel where this panel is added.
     * @param acc The account associated with this panel.
     * @param enterprise The enterprise associated with this panel.
     * @param orgz The organization associated with this panel.
     */
    public ViewMedicinesRequestJPanel(JPanel panel, Account acc, EnterPrise enterprise, Organization orgz) {
        initComponents();
        this.organization = orgz;
        this.panel = panel;
        this.acc = acc;
        this.enterprise = enterprise;
        fillRows();
    }

    /**
     * Fills the table with rows containing details of medicine requests.
     */
    public void fillRows() {
        DefaultTableModel o = (DefaultTableModel) tblReq.getModel();
        o.setRowCount(0);
//        o.setRowCount(0);
        if (!acc.getWorkQueue().getWorkRequestList().isEmpty()) {
            for (WorkRequest wr : acc.getWorkQueue().getWorkRequestList()) {
                Object[] row = new Object[5];
                row[0] = ((SupplierWorkRequest) wr).getMedicationName();
                row[1] = ((SupplierWorkRequest) wr).getQuantity();
                row[2] = wr.getReceiver().getUsrnm();
                String s = ((SupplierWorkRequest) wr).getStatus();
                row[3] = s == null ? "Waiting" : s;
                if (((SupplierWorkRequest) wr).getDeliveryTime() == null) {
                    row[4] = "Details yet to be updated by supplier";
                } else {
                    row[4] = "Expected delivery time " + ((SupplierWorkRequest) wr).getDeliveryTime();
                }
                o.addRow(row);
            }
        } else {
            System.out.println("Null pointer exception");
        }
        Object[] crocinData = {"Crocin", "VERY CRITICAL(<2 HRS)", "Completed", "08-09-2019"};  // Third column is left empty for status
        Object[] insulinData1 = {"Insulin", "LOW PRIORITY(<24 HRS)", "Assigned", "05-03-2019"};
        Object[] insulinData2 = {"Insulin", "MODERATE(<5 HRS)", "Pending", "12-17-2019"};
        Object[] ventolineData = {"Ventoline", "LOW PRIORITY(<24 HRS)", "Completed", "06-11-2019"};
        Object[] paracetomolData = {"Paracetomol", "VERY CRITICAL(<2 HRS)", "Completed", "08-23-2019"};
        Object[] tamifluData = {"Tamiflu (influenza)", "MODERATE(<5 HRS)", "Pending", "04-30-2019"};

        // Add hardcoded data to the table model
        o.addRow(crocinData);
        o.addRow(insulinData1);
        o.addRow(insulinData2);
        o.addRow(ventolineData);
        o.addRow(paracetomolData);
        o.addRow(tamifluData);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane = new javax.swing.JScrollPane();
        tblReq = new javax.swing.JTable();
        lblHeader = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 102, 102));

        tblReq.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MEDICINE NAME", "URGENCY LEVEL", "STATUS", "DELIVERY DATE"
            }
        ));
        scrollPane.setViewportView(tblReq);

        lblHeader.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("VIEW REQUESTS");

        btnBack.setBackground(new java.awt.Color(153, 153, 153));
        btnBack.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBack.setText("<<BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnRefresh.setBackground(new java.awt.Color(153, 153, 153));
        btnRefresh.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnRefresh.setText("REFRESH");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RefreshImage.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 865, Short.MAX_VALUE)
                        .addComponent(btnRefresh))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 855, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(308, 308, 308))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack)
                    .addComponent(lblHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 1049, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHeader)
                .addGap(36, 36, 36)
                .addComponent(btnRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(218, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        panel.remove(this);
        Component[] ca = panel.getComponents();
        Component c = ca[ca.length - 1];
        PharmacyWorkAreaJPanel wap = (PharmacyWorkAreaJPanel) c;
        wap.arrangeRows();
        CardLayout cd = (CardLayout) panel.getLayout();
        cd.previous(panel);        // TODO add your handling code here:
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        fillRows();
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTable tblReq;
    // End of variables declaration//GEN-END:variables
}
