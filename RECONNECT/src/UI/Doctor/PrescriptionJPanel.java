/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Doctor;

import Code.Account;
import Code.DocPrescription;
import Code.EnterPrise;
import Code.Organization.Organization;
import Code.Organization.Organization_Doctor;
import Code.Organization.Organization_Pharmacy;
import Code.PrescriptionList;
import Code.WorkQueue.DoctorWorkRequest;
import Code.WorkQueue.PharmacyWorkRequest;
import Code.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 * Panel for managing prescriptions in the context of a doctor's user interface.
 * Allows the doctor to create and save prescriptions for patients. Also
 * displays a table of prescription-related work requests.
 *
 * @author Milindh R Kashyap
 */
public class PrescriptionJPanel extends javax.swing.JPanel {

    private PrescriptionList prescribedlist;
    private Organization_Doctor doctororg;
    private EnterPrise enter;
    private JPanel uppercontainer;
    private DocPrescription docpres;
    private DoctorWorkRequest docreq;
    private Account ua;

    /**
     * Creates new form PrescriptionJPanel.
     *
     * @param upperContainer The JPanel where this panel is placed.
     * @param prescribedList The directory of prescribed medications.
     * @param ua The user account associated with the doctor.
     * @param enter The enterprise where the doctor belongs.
     * @param doctororg The organization of the doctor.
     */
    public PrescriptionJPanel(
            JPanel upperContainer, PrescriptionList prescribedList, Account ua,
            EnterPrise enter, Organization_Doctor doctororg) {

        initComponents();
        this.uppercontainer = upperContainer;
        this.ua = ua;
        this.enter = enter;
        this.doctororg = doctororg;

        populateWorkReqTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextField1 = new javax.swing.JTextField();
        backBtn = new javax.swing.JButton();
        medicationLbl = new javax.swing.JLabel();
        headerLbl = new javax.swing.JLabel();
        medicationCmbBox = new javax.swing.JComboBox<>();
        nameLbl = new javax.swing.JLabel();
        timesLbl = new javax.swing.JLabel();
        nameTxt = new javax.swing.JTextField();
        timesSpin = new javax.swing.JSpinner();
        ageLbl = new javax.swing.JLabel();
        forLbl = new javax.swing.JLabel();
        ageTxt = new javax.swing.JTextField();
        forSpin = new javax.swing.JSpinner();
        sexLbl = new javax.swing.JLabel();
        saveBtn = new javax.swing.JButton();
        sexCmbBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        diagnosisLbl = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 102, 102));
        setPreferredSize(new java.awt.Dimension(1060, 900));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jScrollPane2.setViewportView(jTextField1);

        backBtn.setText("<<");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        medicationLbl.setText("Medication:");

        headerLbl.setBackground(new java.awt.Color(204, 255, 255));
        headerLbl.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        headerLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerLbl.setText("Doctor Prescription");

        medicationCmbBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Please selcet--", "Paracetomol", "Crocin", "Synthroid", "Crestor", "Ventolin", "Esomeprazole", "Insulin", "Infliximab", "Fluticasone", "Rusovastatin", "Januvia(diabetes)", "Lantus(diabetes)", "Abilify(psychosis, depression)", "Symbicort(asthma)", "Tamiflu(influenza)", "Cialis(erectile dysrunction)", "Viagra(erectile dysrunction)", "Suboxone(opiate addiction)", " " }));

        nameLbl.setFont(new java.awt.Font("Segoe UI Light", 1, 12)); // NOI18N
        nameLbl.setText("Name:");

        timesLbl.setText("Frequency");

        ageLbl.setFont(new java.awt.Font("Segoe UI Light", 1, 12)); // NOI18N
        ageLbl.setText("Age:");

        forLbl.setText("Days");

        sexLbl.setFont(new java.awt.Font("Segoe UI Light", 1, 12)); // NOI18N
        sexLbl.setText("Sex:");

        saveBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/SthethoscopeImage.jpg"))); // NOI18N
        saveBtn.setText("SAVE PRESCRIPTION");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        sexCmbBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Please selcet--", "Male", "Female" }));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medical Name", "Toatal Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        diagnosisLbl.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        diagnosisLbl.setText("Diagnosis:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headerLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nameLbl)
                            .addComponent(ageLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(ageTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(nameTxt))
                        .addGap(498, 498, 498))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sexLbl)
                            .addComponent(diagnosisLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sexCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(395, 395, 395))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(saveBtn)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 761, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(145, 145, 145))))
            .addGroup(layout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(medicationLbl))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(301, 301, 301)
                        .addComponent(timesLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(timesSpin, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(forLbl)
                        .addGap(18, 18, 18)
                        .addComponent(forSpin, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(medicationCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(117, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(headerLbl)
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ageTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ageLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sexLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sexCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(diagnosisLbl)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(medicationLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(medicationCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timesLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timesSpin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(forLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(forSpin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(saveBtn)
                    .addComponent(backBtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(868, 868, 868))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        uppercontainer.remove(this);
        CardLayout crd = (CardLayout) uppercontainer.getLayout();
        crd.previous(uppercontainer);        // TODO add your handling code here:
    }//GEN-LAST:event_backBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        DocPrescription p = new DocPrescription();

        p.setDiagnosis(jTextField1.getText());

        p.setDrug(medicationCmbBox.getSelectedItem().toString());

        p.setTotal_days((Integer) timesSpin.getValue());

        p.setFrequency_day((Integer) forSpin.getValue());
        p.setName_Netk(enter.getOrgName());
        String age = ageTxt.getText();
        boolean flag = true;
        try {
            Integer.parseInt(age);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Age should be an integer!");
            flag = false;
        }

        if (p.getDiagnosis().equals("")) {
            JOptionPane.showMessageDialog(null, " Diagnosis cannot be empty!");
            flag = false;
        } else if (nameTxt.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Patient name cannot be empty!");
            flag = false;

        }
        if (flag == true) {
            doctororg.addPrescription(p);

            PharmacyWorkRequest request = new PharmacyWorkRequest();

            request.setMedicationName(medicationCmbBox.getSelectedItem().toString());
            request.setQuantity(((Integer) timesSpin.getValue()) * ((Integer) forSpin.getValue()));
            request.setSender(ua);
            request.setStatus("Sent");

            JOptionPane.showMessageDialog(null, "Prescription added successfully");

            System.out.println("****" + enter.getOrgName());
            Organization org = null;

            for (Organization organization : enter.getOrgaDirectory().getOrganizations()) {
                if (organization instanceof Organization_Pharmacy) {
                    org = organization;
                    System.out.println("****" + org);
                    break;
                }
            }
            if (org != null) {
System.out.println("****");
                org.getWQ().getWorkRequestList().add(request);
                ua.getWorkQueue().getWorkRequestList().add(request);
            }

            populateWorkReqTable();
        }
    }//GEN-LAST:event_saveBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ageLbl;
    private javax.swing.JTextField ageTxt;
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel diagnosisLbl;
    private javax.swing.JLabel forLbl;
    private javax.swing.JSpinner forSpin;
    private javax.swing.JLabel headerLbl;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JComboBox<String> medicationCmbBox;
    private javax.swing.JLabel medicationLbl;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JButton saveBtn;
    private javax.swing.JComboBox<String> sexCmbBox;
    private javax.swing.JLabel sexLbl;
    private javax.swing.JLabel timesLbl;
    private javax.swing.JSpinner timesSpin;
    // End of variables declaration//GEN-END:variables

    /**
     * Populates the table displaying pharmacy work requests for a user account.
     * Retrieves the relevant information from each work request in the user
     * account's work queue and adds a row to the table for each pharmacy
     * request.
     */
    private void populateWorkReqTable() {
        // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        model.setRowCount(0);
        System.out.println("+++++" + ua.getWorkQueue());

        for (WorkRequest request : ua.getWorkQueue().getWorkRequestList()) {
            try {
                Object[] row = new Object[4];
                String medication = ((PharmacyWorkRequest) request).getMedicationName();
                System.out.println("****" + medication);
                row[0] = (PharmacyWorkRequest) request;
                int quantity = ((PharmacyWorkRequest) request).getQuantity();
                row[1] = quantity;
//                row[2] = request.getReceiver();
//                String result = request.getStatus();
//                row[3] = result == null ? "Waiting" : result;
                model.addRow(row);
            } catch (ClassCastException ignored) {
//                System.out.println("eeror at adding row");
            }

        }
    }
}
